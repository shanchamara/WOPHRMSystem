

@model  WOPHRMSystem.Models.JobMasterForReportModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<!-- daterange picker -->
<link rel="stylesheet" href="~/plugins/daterangepicker/daterangepicker.css">
<!-- iCheck for checkboxes and radio inputs -->
<link rel="stylesheet" href="~/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
<!-- Bootstrap Color Picker -->
<link rel="stylesheet" href="~/plugins/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css">
<!-- Tempusdominus Bootstrap 4 -->
<link rel="stylesheet" href="~/plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
<!-- Select2 -->
<link rel="stylesheet" href="~/plugins/select2/css/select2.min.css">
<link rel="stylesheet" href="~/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
<!-- Bootstrap4 Duallistbox -->
<link rel="stylesheet" href="~/plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css">
<!-- BS Stepper -->
<link rel="stylesheet" href="~/plugins/bs-stepper/css/bs-stepper.min.css">
<!-- dropzonejs -->
<link rel="stylesheet" href="~/plugins/dropzone/min/dropzone.min.css">

<div class="content-wrapper disable-height">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Laber Utilization Summary</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">Home</li>
                        <li class="breadcrumb-item active"><a href="@Url.Action("","Reports")">List Of Reports </a></li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">

                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">

                    <!-- /.card -->
                    <div class="card">
                        @*<div class="card-header">
                                <h3 class="card-title"></h3>
                            </div>*@
                        <!-- /.card-header -->
                        <div class="card-body">
                            <div class="card card-info">
                                <div class="card-header">
                                    <h3 class="card-title">Details</h3>
                                </div>

                                @using (Html.BeginForm("", "", FormMethod.Post, new { role = "form", enctype = "multipart/form-data", id = "quickForm", @autocomplete = "off" }))
                                {

                                    <div class="card-body">


                                        <div class="row">

                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        <label for="exampleInputEmail1"> From Job No </label>

                                                        @Html.DropDownListFor(model => model.FkFromJObId, Model.JObList, "Select", htmlAttributes: new { @class = "form-control", required = "required" })

                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-6">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        <label for="exampleInputEmail1">To Job No</label>

                                                        @Html.DropDownListFor(model => model.FkToJobId, Model.JObList, "Select", htmlAttributes: new { @class = "form-control", required = "required" })

                                                    </div>
                                                </div>
                                            </div>



                                        </div>
                                        <br />
                                        <div class="row">

                                            <div class="col-lg-3">
                                                <div class="mb-3">
                                                    <div class="form-group">

                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-2">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        <div class="form-group mb-0">
                                                            <div class="custom-control custom-checkbox">
                                                                @Html.CheckBoxFor(model => model.AllProject, new { @class = "form-check-input", id = "AllCheckbox" })
                                                                <label for="exampleCheck1">All</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-2">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        <div class="form-group mb-0">
                                                            <div class="custom-control custom-checkbox">
                                                                @Html.CheckBoxFor(model => model.IsCompleted, new { @class = "form-check-input", id = "IsCompletedCheckbox" })
                                                                <label for="exampleCheck1"> Completed</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-2">
                                                <div class="mb-4">
                                                    <div class="form-group mb-0">
                                                        <div class="custom-control custom-checkbox">
                                                            @Html.CheckBoxFor(model => model.ISPending, new { @class = "form-check-input", id = "ISPendingCheckbox" })
                                                            <label for="IsManagerCheckbox"> Pending</label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-2">
                                                <div class="mb-3">
                                                    <div class="form-group">

                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                        <br />

                                        <div class="row">

                                            <div class="col-lg-2">
                                                <div class="mb-3">
                                                    <div class="form-group">

                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        <div class="form-group mb-5">
                                                            <div class="custom-control custom-checkbox">
                                                                @Html.CheckBoxFor(model => model.IsManager, new { @class = "form-check-input", id = "IsManagerCheckbox" })
                                                                <label for="exampleCheck1">Manager Wise</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-2">
                                                <div class="mb-3">
                                                    <div class="form-group">

                                                    </div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="mb-4">
                                                    <div class="form-group mb-0">
                                                        <div class="custom-control custom-checkbox">
                                                            @Html.CheckBoxFor(model => model.IsPartner, new { @class = "form-check-input", id = "IsPartnerCheckbox" })
                                                            <label for="IsManagerCheckbox"> Partner Wise</label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>


                                        </div>



                                    </div>
                                    <!-- /.card-body -->
                                    <div class="card-footer">

                                        <div class="row no-print">
                                            <div class="col-12">
                                                <button type="button" class="btn btn-danger float-right">
                                                    <i class="far fa-close"></i>
                                                    Cancel
                                                </button>
                                                <button type="submit" id="myButton" class="btn btn-primary float-right" style="margin-right: 5px;">
                                                    <i class="fas fa-download"></i> Generate PDF
                                                </button>
                                            </div>
                                        </div>

                                    </div>
                                }


                            </div>
                        </div>
                        <!-- /.card-body -->
                        <!-- /.card -->
                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            </div>
            <!-- /.container-fluid -->

        </div>
    </section>
</div>

@section scripts {
    <!-- jQuery -->
    <script src="~/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Select2 -->
    <script src="~/plugins/select2/js/select2.full.min.js"></script>
    <!-- Bootstrap4 Duallistbox -->
    <script src="~/plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
    <!-- InputMask -->
    <script src="~/plugins/moment/moment.min.js"></script>
    <script src="~/plugins/inputmask/jquery.inputmask.min.js"></script>
    <!-- date-range-picker -->
    <script src="~/plugins/daterangepicker/daterangepicker.js"></script>
    <!-- jquery-validation -->
    <script src="~/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/plugins/jquery-validation/additional-methods.min.js"></script>
    <!-- bootstrap color picker -->
    <script src="~/plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="~/plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Bootstrap Switch -->
    <script src="~/plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
    <!-- BS-Stepper -->
    <script src="~/plugins/bs-stepper/js/bs-stepper.min.js"></script>
    <!-- dropzonejs -->
    <script src="~/plugins/dropzone/min/dropzone.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="~/dist/js/demo.js"></script>


    <script>
        $(function () {
            //Initialize Select2 Elements
            $('.select2').select2()

            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4'
            })

            //Datemask dd/mm/yyyy
            $('#datemask').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
            //Datemask2 mm/dd/yyyy
            $('#datemask2').inputmask('mm/dd/yyyy', { 'placeholder': 'mm/dd/yyyy' })
            //Money Euro
            $('[data-mask]').inputmask()

            //Date picker
            $('#FromDate').datetimepicker({
                format: 'L',
                maxDate: moment() // Disable future dates

            });

            $('#ToDate').datetimepicker({
                format: 'L',
                maxDate: moment() // Disable future dates
            });

            //Date and time picker
            $('#reservationdatetime').datetimepicker({ icons: { time: 'far fa-clock' } });

            //Date range picker
            $('#reservation').daterangepicker()
            //Date range picker with time picker
            $('#reservationtime').daterangepicker({
                timePicker: true,
                timePickerIncrement: 30,
                locale: {
                    format: 'MM/DD/YYYY hh:mm A'
                }
            })
            //Date range as a button
            $('#daterange-btn').daterangepicker(
                {
                    ranges: {
                        'Today': [moment(), moment()],
                        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                        'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                        'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                    },
                    startDate: moment().subtract(29, 'days'),
                    endDate: moment()
                },
                function (start, end) {
                    $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'))
                }
            )

            //Timepicker
            $('#timepicker').datetimepicker({
                format: 'LT'
            })

            //Bootstrap Duallistbox
            $('.duallistbox').bootstrapDualListbox()

            //Colorpicker
            $('.my-colorpicker1').colorpicker()
            //color picker with addon
            $('.my-colorpicker2').colorpicker()

            $('.my-colorpicker2').on('colorpickerChange', function (event) {
                $('.my-colorpicker2 .fa-square').css('color', event.color.toString());
            })

            $("input[data-bootstrap-switch]").each(function () {
                $(this).bootstrapSwitch('state', $(this).prop('checked'));
            })

        })


    </script>
    <script>
        //$('#myButton1').click(function () {
        //    // Check if form is valid
        //    if ($('#quickForm').valid()) {
        //        // Form is valid, proceed with your action
        //        var data = $('#quickForm').serialize();
        //        var url = '/Report/PrintLaberUtilizationStatementWorkType?' + data;
        //        window.open(url, '_blank');
        //    }
        //});

        $(function () {
            $.validator.setDefaults({
                submitHandler: function () {
                    var data = $('#quickForm').serialize();
                    var url = '/Report/PrintJObListing?' + data;
                    window.open(url, '_blank');
                }
            });

            $('#quickForm').validate({
                rules: {

                    FromDate: {
                        required: true,
                        date: true
                    },
                    ToDate: {
                        required: true,
                        date: true
                    },
                    FkToJobId: {
                        required: true,
                    },
                    FkFromJObId: {
                        required: true,
                    },
                    ISPending: {
                        required: {
                            depends: function (element) {
                                return !$('#IsCompletedCheckbox').is(':checked') && !$('#AllCheckbox').is(':checked');
                            }
                        }
                    },
                    AllProject: {
                        required: {
                            depends: function (element) {
                                return !$('#IsCompletedCheckbox').is(':checked') && !$('#ISPendingCheckbox').is(':checked');
                            }
                        }
                    },
                    IsCompleted: {
                        required: {
                            depends: function (element) {
                                return !$('#ISPendingCheckbox').is(':checked') && !$('#AllCheckbox').is(':checked');
                            }
                        }
                    },
                    IsManager: {
                        required: {
                            depends: function (element) {
                                return !$('#IsPartnerCheckbox').is(':checked');
                            }
                        }
                    },
                    IsPartner: {
                        required: {
                            depends: function (element) {
                                return !$('#IsManagerCheckbox').is(':checked');
                            }
                        }
                    }
                },
                messages: {

                    FromDate: "Please select the FromDate",
                    ToDate: "Please select the ToDate",
                    FkFromJObId: "Please select the JOb",
                    FkToJobId: "Please select the JOb"
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });






        });

        document.addEventListener("DOMContentLoaded", function () {
            var IsGroups = document.getElementById("IsGroups");
            var IsWorkType = document.getElementById("IsWorkType");

            IsWorkType.addEventListener("change", function () {
                if (IsWorkType.checked) {
                    IsGroups.checked = false;
                }
            });

            IsGroups.addEventListener("change", function () {
                if (IsGroups.checked) {
                    IsWorkType.checked = false;
                }
            });
        });



        document.addEventListener("DOMContentLoaded", function () {
            var isManagerCheckbox = document.getElementById("IsManagerCheckbox");
            var isPartnerCheckbox = document.getElementById("IsPartnerCheckbox");

            isPartnerCheckbox.addEventListener("change", function () {
                if (isPartnerCheckbox.checked) {
                    isManagerCheckbox.checked = false;
                }
            });


            isManagerCheckbox.addEventListener("change", function () {
                if (isManagerCheckbox.checked) {
                    isPartnerCheckbox.checked = false;
                }
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            var IsCompletedCheckbox = document.getElementById("IsCompletedCheckbox");
            var ISPendingCheckbox = document.getElementById("ISPendingCheckbox");
            var All = document.getElementById("AllCheckbox");

            All.addEventListener("change", function () {
                if (All.checked) {
                    IsCompletedCheckbox.checked = false;
                    ISPendingCheckbox.checked = false;
                }
            });


            ISPendingCheckbox.addEventListener("change", function () {
                if (ISPendingCheckbox.checked) {
                    IsCompletedCheckbox.checked = false;
                    All.checked = false;
                }
            });

            IsCompletedCheckbox.addEventListener("change", function () {
                if (IsCompletedCheckbox.checked) {
                    ISPendingCheckbox.checked = false;
                    All.checked = false;
                }
            });
        });

    </script>


}


