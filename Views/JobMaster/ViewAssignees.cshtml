@*@using System.Text.Json*@
@model WOPHRMSystem.Models.ListViewCurrentlyAssignees


<!-- DataTables -->
<link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">

<style>
    .disable-height {
        height: auto !important;
    }

    .list-group {
        max-height: 200px;
        margin-bottom: 10px;
        overflow-x: hidden;
        -webkit-overflow-scrolling: touch;
    }
</style>
@{
    int Rows = 1;
}




<div class="container-fluid">
    <div class="row">
        <div class="col-12">

            <!-- /.card -->
            <div class="card">
                <!--<div class="card-header">-->
                @*<h3 class="card-title">DataTable with default features</h3>*@
                <!--</div>-->
                <!-- /.card-header -->
                <div class="list-group">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th style="display:none;">Id</th> <!-- Hidden Id column -->
                                <th class="col-1 form-control-sm">Code</th>
                                <th class="col-3 form-control-sm">Name</th>
                                <th class="col-2 form-control-sm">Type</th>
                                <th class="col-3 form-control-sm">Budgeted Hours</th>
                                <th class="col-3 form-control-sm">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var s in Model.JobMasterAssignTempModels)
                            {
                                <tr>
                                    <td style="display:none;">@s.Id</td> <!-- Hidden Id column -->
                                    <td class="col-1 form-control-sm">@s.Code</td>
                                    <td class="col-3 form-control-sm">@s.Name</td>
                                    <td class="col-2 form-control-sm">@s.TypeOftable</td>
                                    <td class="col-3">
                                        <input type="text" class="form-control budgeted-hours form-control-sm" value="@s.BudgetedHours" />
                                    </td>
                                    <td class="col-3 project-actions text-right">
                                        <a class="btn btn-info btn-sm" onclick="getInputValue1(this,'@s.TypeOftableId','@s.TypeOftable','@s.Name','@s.Code','@s.Id','@s.Designation')">
                                            <i class="fas fa-pencil-alt"></i>
                                        </a>
                                        <a class="btn btn-danger btn-sm" onclick="PostDelete1('@s.Id')">
                                            <i class="fas fa-trash"></i>
                                        </a>
                                    </td>
                                </tr>
                                Rows++;
                            }
                            @using (Html.BeginForm("", "", FormMethod.Post, new { role = "form", enctype = "multipart/form-data", id = "quickForm1", @autocomplete = "off" }))
                            {

                                <tr>

                                    <td colspan="3">
                                        @Html.DropDownListFor(model => model.EmployeeId, Model.PartnerList, "Select", htmlAttributes: new { @class = "form-control form-control-sm", id = "addpartners", required = "required" })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.BudgetedHours1, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "", required = "required", @type = "number", @min = "0" } })

                                    </td>
                                    <td class="project-actions text-right">
                                        <button class="btn btn-info btn-sm" type="submit" onclick="AddAssign(event)">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div>

<script>

    debugger
    localStorage.clear();
    var List = JSON.parse(localStorage.getItem('ViewAssignee')) || [];
    var json = @Html.Raw(Json.Encode(@Model.JobMasterAssignTempModels));
    List = [...json];
    localStorage.setItem('ViewAssignee', JSON.stringify(List));


    function getInputValue1(button, typeOftableId, typeOftable, name, code, id, Designation) {
        var row = button.closest('tr');
        var budgetedHours = row.querySelector('.budgeted-hours').value || 0;

        // Call your AddAssign function or handle the values as needed
        UpdateBudget(typeOftableId, typeOftable, name, code, Designation, id, budgetedHours);
    }

    var UpdateBudget = function (TypeOftableId, TypeOftable, Name, Code, Designation, id, BudgetedHours) {
        //$("#loaderbody").removeClass('hide');

        debugger
        $.ajax({
            type: "Post",
            url: "/JobMaster/UpdateBudgeet",
            data: { TypeOftableId: TypeOftableId, TypeOftable: TypeOftable, Name: Name, Code: Code, Designation: Designation, Id: id, BudgetedHours: BudgetedHours },

            success: function (result) {
               
                    IsAssignee = true;
                    $('#errorAssignee').html("");
                   
                        $.ajax({
                            type: "GET",
                            url: "/JobMaster/ViewAssignees",
                            data: { Createby: 'User' },

                            success: function (result) {
                                debugger
                                $("#staticEmployee").html(result);
                            },
                        })
                   
            },
        })
    }

    $(document).ready(function () {
        $('.budgeted-hours').keydown(function (event) {
            if (event.keyCode == 13) {
                event.preventDefault();
                return false;
            }
        });
    });



    var PostDelete1 = function (Id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to Remove this Record?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "DELETE",
                    url: "/JobMaster/RemoveAssignee",
                    data: { ID: Id },

                    success: function (result) {
                        Swal.fire({
                            icon: result.Status,
                            title: result.Status,
                            text: result.Text
                        }).then((result) => {
                            $.ajax({
                                type: "GET",
                                url: "/JobMaster/ViewAssignees",
                                data: { Createby: 'User' },

                                success: function (result) {

                                    $("#staticEmployee").html(result);

                                },
                            })
                        });
                    }
                });
            }
        });
    }




    var AddAssign = function (e) {
        e.preventDefault();  // Prevent the default form submission
        //debugger
        //var data = $('#quickForm1').serialize();
        var selectElement = document.getElementById("addpartners").value;
        var Elements = document.getElementById("BudgetedHours1").value;

        debugger;
        $.ajax({
            type: "POST",
            url: "/JobMaster/InsertSelectedAssign",
            data: { id: selectElement, Hours: Elements},
            success: function (result) {
                IsAssignee = true;
               
                        $.ajax({
                            type: "GET",
                            url: "/JobMaster/ViewAssignees",
                            data: { Createby: 'User' },
                            success: function (result) {
                                debugger;
                                $("#staticEmployee").html(result);
                            }
                        });
                   
            }
        });
    };







</script>