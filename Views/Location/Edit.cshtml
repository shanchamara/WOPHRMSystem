@model  WOPHRMSystem.Models.LocationModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}



<div class="content-wrapper disable-height">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>Edit Location</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">Home</li>
                        <li class="breadcrumb-item active"><a href="@Url.Action("Index","Location")">List Of Locations </a></li>
                    </ol>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">

                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
    <!-- /.content -->
    <section class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12">

                    <!-- /.card -->
                    <div class="card">
                        @*<div class="card-header">
                                <h3 class="card-title"></h3>
                            </div>*@
                        <!-- /.card-header -->
                        <div class="card-body">
                            <div class="card card-info">
                                <div class="card-header">
                                    <h3 class="card-title">Details</h3>
                                </div>

                                @using (Html.BeginForm("", "", FormMethod.Post, new { role = "form", enctype = "multipart/form-data", id = "quickForm", @autocomplete = "off" }))
                                {
                                    @Html.HiddenFor(Model => Model.Id)
                                    <div class="card-body">

                                        <div class="row">

                                            <div class="col-lg-8">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        <label for="exampleInputEmail1">Customer</label>

                                                        @Html.DropDownListFor(model => model.Fk_CustomerId, Model.CustomerLists, "Select", htmlAttributes: new { @class = "form-control", id = "selectCustomer", required = "required", @ReadOnly = "ReadOnly" })

                                                    </div>
                                                </div>
                                            </div>

                                        </div>

                                        <div class="row">

                                            <div class="col-lg-4">
                                                <div class="mb-3">
                                                    <div class="form-group">
                                                        <label for="exampleInputEmail1">Code</label>

                                                        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", placeholder = "", required = "required" } })

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-lg-8">

                                                <div class="mb-4">
                                                    <div class="form-group">
                                                        <label for="basicpill-address-input">Location</label>
                                                        @Html.EditorFor(model => model.Narration, new { htmlAttributes = new { @class = "form-control", placeholder = "", required = "required" } })

                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group mb-0">
                                            <div class="custom-control custom-checkbox">
                                                @Html.CheckBoxFor(model => model.IsActive, new { @class = "form-check-input", id = "exampleCheck1" })
                                                <label for="exampleCheck1">Is Active.</label>
                                            </div>
                                        </div>


                                    </div>
                                    <!-- /.card-body -->
                                    <div class="card-footer">
                                        <div class="col-12">

                                            <button type="submit" class="btn btn-primary float-right">Submit</button>

                                        </div>

                                    </div>
                                }

                                <div class="row">
                                    <div class="col-lg-12">

                                        <div id="Viewdata">

                                        </div>

                                    </div>
                                </div>


                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>

                    <!-- /.card -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </section>
</div>

@section scripts {
    <script src="~/plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="~/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- jquery-validation -->
    <script src="~/plugins/jquery-validation/jquery.validate.min.js"></script>
    <script src="~/plugins/jquery-validation/additional-methods.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="~/dist/js/demo.js"></script>

    <script>




        $(function () {
            $.validator.setDefaults({
                submitHandler: function () {
                    //alert("Form successful submitted!");
                    var data = $('#quickForm').serialize();
                    debugger;

                   var List = JSON.parse(localStorage.getItem('CustomerLocationList')) || [];

                    if (List.length > 0) {

                    } else {
                        let hasWarning = false;


                          Swal.fire({
                                title: 'Warning!',
                                text: 'please add the date range and rate in the new record.',
                                icon: 'warning',
                                confirmButtonText: 'OK'
                          });



                            hasWarning = true;


                        if (hasWarning) {
                            return; // Exit function or prevent further execution
                        }
                    }
                    PostCustomerInsert(data);
                }
            });
            $('#quickForm').validate({
                rules: {
                    Code: {
                        required: true,

                    },
                    Narration: {
                        required: true,

                    },
                    IsActive: {
                        required: false
                    },
                    Fk_CustomerId: {
                        required: true
                    },
                    Rate: {
                        required: false
                    },
                },
                messages: {
                    Code: {
                        required: "Please enter a code",
                    },
                    Narration: {
                        required: "Please provide a Location Name",
                    },
                    terms: "Please Select the Status",
                    Fk_CustomerId: {
                        required: "Please Select the Customer",
                    },
                    Rate: {
                        required: "Please Provide a Rate",
                    },
                },
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                }
            });
        });


        var PostCustomerInsert = function (model) {

            var masterModel = {
                Narration: $("#Narration").val(),
                Code: $("#Code").val(),
                Id: $("#Id").val(),
                IsActive: document.getElementById("exampleCheck1").checked,
                Fk_CustomerId: document.getElementById("selectCustomer").value,
                IsActive: document.getElementById("exampleCheck1").checked,
            };
            var rates = JSON.parse(localStorage.getItem('CustomerLocationList')) || [];

            var dataToSend = {
                masterModel: masterModel,
                rates: rates
            };
            $.ajax({
                type: "POST",
                url: "/Location/Edit",
                data: JSON.stringify(dataToSend),
                contentType: "application/json",
                success: function (result) {
                    Swal.fire({
                        icon: result.Status,
                        title: result.Status,
                        text: result.Text
                    }).then((swalResult) => {
                        if (swalResult.isConfirmed) {
                             window.location.href = "@Url.Action("Index", "Location")"
                        } else {
                            window.location.href = "@Url.Action("Index", "Location")"
                        }
                    });
                },
                error: function (xhr, status, error) {
                    console.error("Error: " + error);
                    console.error("Status: " + status);
                    console.error(xhr.responseText);
                    Swal.fire({
                        icon: "error",
                        title: "Error",
                        text: "Something went wrong. Please try again later.",
                    });
                }
            });


        }
        window.addEventListener('load', function () {
            localStorage.clear();
            var Customerid = parseFloat($('#selectCustomer').val()) || 0;
            var id = parseFloat($('#Id').val()) || 0;
            // Get the selected value
            GetSelectedCustomerHasLocation(Customerid,id);


        });





        var GetSelectedCustomerHasLocation = function (id,locid) {

            $.ajax({
                type: "GET",
                url: "/Location/DisplayCustomerHasLocation",
                data: { id: id, locid: locid },

                success: function (result) {
                    debugger
                    $("#Viewdata").html(result);


                },
            })
        }

        $(document).ready(function () {




            $('#selectCustomer').on('input', function () {
                localStorage.clear();
                var Customerid = parseFloat($('#selectCustomer').val()) || 0;
                // Get the selected value
                GetSelectedCustomerHasLocation(Customerid);

            });
        });
    </script>
}

