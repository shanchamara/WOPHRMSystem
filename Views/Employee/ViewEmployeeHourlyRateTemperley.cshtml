@model WOPHRMSystem.Models.ListEmployeeRate


<!-- DataTables -->
<link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">

<style>
    .disable-height {
        height: auto !important;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th style="display:none;">Id</th> <!-- Hidden Id column -->
                                <th>To Date</th>
                                <th>From Date</th>
                                <th>Designation</th>
                                <th>Rate</th>
                                <th>Action</th>
                            </tr>
                        </thead>

                        <tbody id="ratesBody">
                            @using (Html.BeginForm("", "", FormMethod.Post, new { role = "form", enctype = "multipart/form-data", id = "quickForm1", @autocomplete = "off" }))
                            {
                                @Html.HiddenFor(model => model.Id)
                                <tr>
                                    <td style="display:none;"></td> <!-- Hidden Id column -->
                                    <td>
                                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", id = "ToDate", required = "required", onchange = "handleDateChange1()" } })
                                    </td>

                                    <td>
                                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", id = "FromDate", required = "required", onchange = "handleDateChange1()" } })
                                    </td>
                                    <td>
                                        @Html.DropDownListFor(model => model.Fk_DesginationId, Model.Designationlists, "Select", htmlAttributes: new { @class = "form-control", id = "selectDesgination1", required = "required", onchange = "handleDateChange1()" })

                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", id = "Rate", required = "required", @type = "number", @min = "0", onchange = "handleDateChange1()" } })
                                    </td>
                                    <td class="project-actions text-right">
                                        <button class="btn btn-info btn-sm" type="button" onclick="SubmitStepTemperley()">
                                            <i class="fas fa-pencil-alt"></i> Add
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Ensure jQuery and jQuery Validation scripts are loaded -->
<script src="~/plugins/jquery/jquery.min.js"></script>
<script src="~/plugins/jquery-validation/jquery.validate.min.js"></script>
<script src="~/plugins/jquery-validation/additional-methods.min.js"></script>

<script>

    function handleDateChange1() {
        // Your logic here
        debugger
        var ToDate = document.getElementById("ToDate").value;
        var fromDate = document.getElementById("FromDate").value;
        var Rate = document.getElementById("Rate").value;
        var Fk_DesginationId = $('#selectDesgination1').val();

        if (ToDate != "") {

            document.getElementById("ToDate").className = "form-control text-box single-line";


        }

        if (fromDate != "") {
            document.getElementById("FromDate").className = "form-control text-box single-line";


        }

        if (Rate != "") {
            document.getElementById("Rate").className = "form-control text-box single-line";


        }
        if (Fk_DesginationId != "") {
            var dropdown = document.getElementById("selectDesgination1");
            setTimeout(function () {
                dropdown.classList.remove("is-invalid");
            }, 10);

        }
    }


    var IsValid = true;

    function SubmitStepTemperley() {

        debugger
        var ToDate = document.getElementById("ToDate").value;
        var fromDate = document.getElementById("FromDate").value;
        var Rate = document.getElementById("Rate").value;
        var Fk_DesginationId = $('#selectDesgination1').val();



        if (ToDate == "") {
            IsValid = false;
            document.getElementById("ToDate").className = "form-control text-box single-line is-invalid";

            return IsValid;
        }

        if (fromDate == "") {
            IsValid = false;
            document.getElementById("FromDate").className = "form-control text-box single-line is-invalid";

            return IsValid;
        }



        if (Fk_DesginationId == "") {
            IsValid = false;
            // $('#selectDesgination').className = "form-control text-box single-line is-invalid";
            var dropdown = document.getElementById("selectDesgination1");
            setTimeout(function () {
                dropdown.classList.add("is-invalid");
            }, 10);
            return IsValid;
        }
        if (Rate == "") {
            IsValid = false;
            document.getElementById("Rate").className = "form-control text-box single-line is-invalid";

            return IsValid;
        }

        var selectedText = $('#selectDesgination1 option:selected').text();

        debugger
        var rates = JSON.parse(localStorage.getItem('rates')) || [];
        rates.push({ toDate: ToDate, fromDate: fromDate, rate: Rate, fk_DesginationId: Fk_DesginationId, designationName: selectedText  });
        localStorage.setItem('rates', JSON.stringify(rates));
        displayRates();
    }

    function displayRates() {
        var rates = JSON.parse(localStorage.getItem('rates')) || [];
        var ratesBody = document.getElementById('ratesBody');
        ratesBody.innerHTML = ''; // Clear previous rows

        rates.forEach(function (rate, index) {
            var row = `<tr>
                    <td>${rate.toDate}</td>
                    <td>${rate.fromDate}</td>
                    <td>${rate.designationName}</td>
                    <td>${rate.rate}</td>
                    <td class="project-actions text-right"><a class="btn btn-danger btn-sm" onclick="deleteRate(${index})">
                         <i class="fas fa-trash"></i> Remove
                     </a></td>
                </tr>


                `;
            ratesBody.innerHTML += row;
        });

        var row1 = `
         @using (Html.BeginForm("", "", FormMethod.Post, new { role = "form", enctype = "multipart/form-data", id = "quickForm1", @autocomplete = "off" }))
     {
         @Html.HiddenFor(model => model.Id)
         <tr>
             <td style="display:none;"></td>
             <td>
                 @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", id = "ToDate", required = "required", onchange = "handleDateChange1()" } })
             </td>
             <td>
                 @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", id = "FromDate", required = "required", onchange = "handleDateChange1()" } })
             </td>
              <td>
                 @Html.DropDownListFor(model => model.Fk_DesginationId, Model.Designationlists, "Select", htmlAttributes: new { @class = "form-control", id = "selectDesgination1", required = "required", onchange = "handleDateChange1()" })
              </td>
             <td>
                 @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control", id = "Rate", required = "required", @type = "number", @min = "0", onchange = "handleDateChange1()" } })
             </td>
             <td class="project-actions text-right">
                 <button class="btn btn-info btn-sm" type="button" onclick="SubmitStepTemperley()">
                     <i class="fas fa-pencil-alt"></i> Add
                 </button>
             </td>
         </tr>
     }

    `;
        ratesBody.innerHTML += row1;
    }


    function deleteRate(index) {
        var rates = JSON.parse(localStorage.getItem('rates')) || [];
        rates.splice(index, 1);
        localStorage.setItem('rates', JSON.stringify(rates));
        displayRates();
    }
</script>
