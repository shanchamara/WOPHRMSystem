@model WOPHRMSystem.Models.Chequeform

<!-- DataTables -->
<link rel="stylesheet" href="~/plugins/datatables-bs4/css/dataTables.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-responsive/css/responsive.bootstrap4.min.css">
<link rel="stylesheet" href="~/plugins/datatables-buttons/css/buttons.bootstrap4.min.css">

<style>
    .disable-height {
        height: auto !important;
    }

    .list-group {
        max-height: 400px;
        margin-bottom: 10px;
        overflow-x: hidden;
        -webkit-overflow-scrolling: touch;
    }
</style>
@{
    int Rows = 1;
}




<div class="container-fluid">
    <div class="row">
        <div class="col-12">

            <!-- /.card -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Cheque Details</h3>
                </div>
                <div class="list-group">
                    <table id="example1" class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th style="display:none;">Id</th> <!-- Hidden Id column -->
                                <th class="col-2 form-control-sm">Cheque No</th>
                                <th class="col-2 form-control-sm">Recevied Date</th>
                                <th class="col-2 form-control-sm">Exchange Date</th>
                                <th class="col-2 form-control-sm">Bank Details</th>

                                <th class="col-2 form-control-sm"> Amount</th>

                                <th class="col-2 form-control-sm">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var s in Model.ChequeModelData)
                            {
                                <tr>
                                    <td style="display:none;">@s.Id</td> <!-- Hidden Id column -->
                                    <td>@s.ChequeNo</td> <!-- Hidden Id column -->
                                    <td class="form-control-sm">@s.ReceivedDate.Value.ToShortDateString()  </td>
                                    <td class="form-control-sm">@s.CashTookDate.Value.ToShortDateString()  </td>
                                    <td class="form-control-sm">@s.BankDetails  </td>
                                    <td class="form-control-sm">@s.Amount</td>

                                    <td class="col-2 project-actions text-right">
                                        <a class="btn btn-danger btn-sm" onclick="PostDelete2('@s.Id')">
                                            <i class="fas fa-trash"></i>
                                        </a>

                                    </td>
                                </tr>
                                Rows++;
                            }

                            @using (Html.BeginForm("", "", FormMethod.Post, new { role = "form", enctype = "multipart/form-data", id = "quickForm1", @autocomplete = "off" }))
                            {

                                <tr>
                                    @Html.HiddenFor(model => model.RowTotalAmount)
                                    <td>
                                        @Html.EditorFor(model => model.Fileds.ChequeNo, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "", id = "ChequeNo" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.Fileds.ReceivedDate, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "", id = "ReceivedDate" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.Fileds.CashTookDate, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "", id = "CashTookDate" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.Fileds.BankDetails, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "", id = "BankDetails" } })
                                    </td>
                                    <td>
                                        @Html.EditorFor(model => model.Fileds.Amount, new { htmlAttributes = new { @class = "form-control form-control-sm", placeholder = "", @type = "number", @min = "0", id = "Amount" } })

                                    </td>
                                    <td class="project-actions text-right">
                                        <button class="btn btn-info btn-sm" type="button" onclick="AddChequeBody(event)">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </td>
                                </tr>
                            }

                        </tbody>
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</div>


<script>


    var IsValid = true;

    var AddChequeBody = function (e) {
        e.preventDefault();
        debugger

        var ChequeNo = document.getElementById("ChequeNo").value;
        var Amount = document.getElementById("Amount").value;
        var Elements = parseInt(document.getElementById('Amount').value);
        var RowTotalAmount = parseInt(document.getElementById('RowTotalAmount').value);

        var valueRowTotalAndelements = RowTotalAmount + Elements;

        var receiptAmount = parseInt(document.getElementById('ReceiptAmount').value);
        var TotalAmount = isNaN(receiptAmount) ? 0 : receiptAmount;
        var ReceivedDate = document.getElementById('ReceivedDate').value;
        var CashTookDate = document.getElementById('CashTookDate').value;
        var BankDetails = document.getElementById("BankDetails").value;

        debugger

        if (ChequeNo == "") {
            IsValid = false;

            document.getElementById("ChequeNo").className = "form-control form-control-sm is-invalid";
            return false;
        }
        if (ReceivedDate == "") {
            IsValid = false;

            document.getElementById("ReceivedDate").className = "form-control form-control-sm is-invalid";
            return false;
        }
        if (CashTookDate == "") {
            IsValid = false;

            document.getElementById("CashTookDate").className = "form-control form-control-sm is-invalid";
            return false;
        }
        if (BankDetails == "") {
            IsValid = false;

            document.getElementById("BankDetails").className = "form-control form-control-sm is-invalid";
            return false;
        }

        if (Amount == "") {
            IsValid = false;

            document.getElementById("Amount").className = "form-control form-control-sm is-invalid";
            return false;
        }

        if (valueRowTotalAndelements > TotalAmount) {

            Swal.fire({
                icon: 'warning',
                title: 'warning',
                text: 'Amount should not be greater than Receipt Amount.',     // Set the text of the alert
            }).then((swalResult) => {
                if (swalResult.isConfirmed) {

                } else {

                }
            });
            return false;
        }

        $.ajax({
            type: "POST",
            url: "/GeneralReceipt/ReceiptBodyTempInsert",
            data: { cashTookDate: CashTookDate, details: BankDetails, Amount: Amount, chequeNo: ChequeNo, receivedDate: ReceivedDate },
            success: function (result) {
                IsCheque = true;
                Swal.fire({
                    icon: result.Status,
                    title: result.Status,
                    text: result.Text
                }).then((result) => {
                   
                    if (result.isConfirmed) {
                        GetSelectedCheque();
                    } else {
                        GetSelectedCheque();
                    }
                });
            }
        });
    };

    var PostDelete2 = function (Id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "Do you really want to Remove this Record?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "DELETE",
                    url: "/GeneralReceipt/ChequeDelete",
                    data: { ID: Id },

                    success: function (result) {
                        Swal.fire({
                            icon: result.Status,
                            title: result.Status,
                            text: result.Text
                        }).then((result) => {
                            GetSelectedCheque();
                        });
                    }
                });
            }
        });
    }



</script>